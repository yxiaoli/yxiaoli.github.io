<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Sherry&#39;s blog</title>
    <link>https://www.xiaoli-yang.com/tags/python/</link>
    <description>Recent content in python on Sherry&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Powered by [Hugo](//gohugo.io). Content by Xiaoli Yang</copyright>
    <lastBuildDate>Sun, 05 Apr 2020 08:57:55 +0100</lastBuildDate>
    
	<atom:link href="https://www.xiaoli-yang.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Common Traps in Python - part 1</title>
      <link>https://www.xiaoli-yang.com/2020/04/05/common-traps-in-python-part-1/</link>
      <pubDate>Sun, 05 Apr 2020 08:57:55 +0100</pubDate>
      
      <guid>https://www.xiaoli-yang.com/2020/04/05/common-traps-in-python-part-1/</guid>
      <description>Part 1 - The traps of List in Python 1. Assignment trap Note: Assignment with an = on lists does not make a copy. Instead, assignment makes the two variables point to the one list in memory.
 colors = [&#39;red&#39;, &#39;blue&#39;, &#39;green&#39;] b = colors ## Does not copy the list b [1] = &amp;quot;yellow&amp;quot; print (colors) # [&#39;red&#39;, &#39;yellow&#39;, &#39;green&#39;] print(b) # [&#39;red&#39;, &#39;yellow&#39;, &#39;green&#39;]  and you may get really risky return</description>
    </item>
    
  </channel>
</rss>